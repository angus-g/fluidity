python_interp = find_program('python3')
sed = find_program('sed')

refcounts = []

refcount_types = [
    'block_csr_matrix', 'block_dynamic_csr_matrix', 'csr_matrix', 'csr_sparsity',
    'dynamic_csr_matrix', 'petsc_csr_matrix', 'petsc_numbering_type',
    'element_type', 'halo_type', 'mesh_type', 'picker_type', 'quadrature_type',
    'scalar_field', 'tensor_field', 'vector_field',
]
foreach type : refcount_types
    refcount = custom_target(
        input: 'Refcount_templates.F90',
        output: f'Reference_count_@type@.h',
        command: [sed, f's/REFCOUNT_TYPE/@type@/', '@INPUT@'],
        capture: true,
    )
    refcount_interface = custom_target(
        input: 'Refcount_interface_templates.F90',
        output: f'Reference_count_interface_@type@.h',
        command: [sed, f's/REFCOUNT_TYPE/@type@/', '@INPUT@'],
        capture: true,
    )

    refcounts += refcount
    refcounts += refcount_interface
endforeach

diagnostic_files = [
    '../diagnostics/Binary_Operators.F90',
    '../diagnostics/Differential_Operators.F90',
    '../diagnostics/Field_Copies.F90',
    '../diagnostics/Mass_Matrix_Diagnostics.F90',
    '../diagnostics/Mesh_Diagnostics.F90',
    '../diagnostics/Metric_Diagnostics.F90',
    '../diagnostics/Momentum_Diagnostics.F90',
    '../diagnostics/Multiphase_Diagnostics.F90',
    '../diagnostics/Parallel_Diagnostics.F90',
    '../diagnostics/Python_Diagnostics.F90',
    '../diagnostics/Simple_Diagnostics.F90',
    '../diagnostics/Surface.F90',
    '../diagnostics/Tidal_Diagnostics.F90',
]
diag_fields = custom_target(
    input: ['../diagnostics/Diagnostic_Fields_New.F90.in'] + diagnostic_files,
    output: 'Diagnostic_Fields_New.F90',
    command: [python_interp, '../tools/make_diagnostic_fields.py', '@OUTPUT@', '@INPUT@'],
)

check_options_files = [
    '../assemble/Adapt_Integration.F90',
    '../assemble/Adapt_State.F90',
    '../assemble/Adapt_State_Prescribed.F90',
    '../assemble/Adaptivity_1D.F90',
    '../assemble/Advection_Diffusion_CG.F90',
    '../assemble/Advection_Diffusion_DG.F90',
    '../assemble/Advection_Diffusion_FV.F90',
    '../assemble/Biology.F90',
    '../assemble/Compressible_Projection.F90',
    '../assemble/Coriolis.F90', '../assemble/Field_Equations_CV.F90',
    '../assemble/Free_Surface.F90',
    '../assemble/Geostrophic_Pressure.F90',
    '../assemble/Interpolation_manager.F90',
    '../assemble/Mba2d_Integration.F90',
    '../assemble/Mba3d_Integration.F90',
    '../assemble/Momentum_DG.F90',
    '../assemble/Momentum_Diagnostic_Fields.F90',
    '../assemble/Momentum_Equation.F90',
    '../assemble/Sam_integration.F90',
    '../assemble/Shallow_Water_Equations.F90',
    '../assemble/qmesh.F90', '../error_measures/Limit_metric.F90',
    '../femtools/Vertical_Extrapolation.F90',
    '../horizontal_adaptivity/Extrude.F90', '../main/Fluids.F90',
    '../ocean_forcing/bulk_parameterisations.F90',
    '../parameterisation/Gls_vertical_turbulence_model.F90',
    '../parameterisation/k_epsilon.F90',
    '../population_balance/DQMOM.F90',
    '../preprocessor/Populate_State.F90',
    '../preprocessor/Populate_Sub_State.F90', '../sediments/Sediment.F90',
    'Adaptive_Timestepping.F90', 'Checkpoint.F90', 'Coordinates.F90',
    'Diagnostic_variables.F90', 'Field_Options.F90',
    'Write_State.F90', diag_fields,
]
check_options = custom_target(
    input: check_options_files,
    output: 'Check_Options.F90',
    command: [python_interp, '../tools/make_check_options.py', '@OUTPUT@'],
)

register_diagnostics = custom_target(
    output: 'Register_Diagnostics.F90',
    command: [python_interp, '../tools/make_register_diagnostics.py', '@OUTPUT@'],
)

lib_femtools = static_library(
    'femtools',
    [
        'Adaptive_Timestepping.F90',
        'Adjacency_Lists.F90', 'AuxilaryOptions.F90', 'Bound_field.F90',
	'Boundary_Conditions.F90', 'Checkpoint.F90',
	'Colouring.F90', 'Conservative_interpolation.F90', 'Coordinates.F90',
	'CV_Face_Values.F90', 'CV_Faces.F90', 'CV_Fields.F90', 'CV_Options.F90',
	'CV_Shape_Functions.F90', 'CV_Upwind_Values.F90', 'CVTools.F90',
        'Data_structures.F90', 'Data_structures_C.c', 'Detector_Data_Types.F90', 'Detector_Move_Lagrangian.F90',
	'Detector_Parallel.F90', 'Detector_Tools.F90', 'DG_interpolation.F90',
	'Dgtools.F90',
	'Diagnostic_Fields.F90', 'Diagnostic_variables.F90', 'Dynamic_Bin_Sort.F90',
	'Element_Intersection.cpp',
	'Element_Numbering.F90', 'Element_set.F90', 'Elements.F90',
	'eleset.cpp',
	'embed_python.c', 'Embed_Python_Fortran.F90', 'EventCounter.F90',
	'Exodusii_Common.F90', 'Exodusii_F_Interface.F90', 'FEFields.F90', 'FETools.F90',
	'Field_derivatives.F90', 'Field_Options.F90',
	'Fields.F90', 'Fields_Allocates.F90', 'Fields_Base.F90', 'Fields_Calculations.F90',
	'Fields_Data_Types.F90', 'Fields_Halos.F90', 'Fields_Manipulation.F90',
        'Futils.F90', 'Global_Numbering.F90', 'Global_Parameters.F90',
	'GMSH_Common.F90', 'Grundmann_Moeller_Quadrature.F90',
        'Halo_Data_Types.F90', 'Halos.F90', 'Halos_Allocates.F90', 'Halos_Base.F90',
        'Halos_Communications.F90', 'Halos_Debug.F90', 'Halos_Derivation.F90', 'Halos_Diagnostics.F90', 'Halos_IO.cpp',
	'Halos_Numbering.F90', 'Halos_Ownership.F90', 'Halos_Registration.F90', 'Halos_Repair.F90',
        'Integer_hash_table.F90', 'Integer_set.F90', 'Interpolation.F90',
	'Intersection_finder.F90', 'intvecset.cpp', 'ISCopyIndices.cpp',
	'Linked_Lists.F90',
        'Memory_Diagnostics.F90', 'Merge_tensors.F90', 'Mesh_Files.F90', 'Mesh_Quality.F90',
	'Mesh_Quality_C.cpp', 'MeshDiagnostics.F90', 'Metric_tools.F90',
	'Mixing_Statistics.F90',
	'Multigrid.F90', 'Node_boundary.F90',
	'Node_Owner_Finder.cpp', 'Node_Owner_Finder_Fortran.F90',
	'Node_Ownership.F90',
	'Parallel_fields.F90', 'Parallel_Tools.F90', 'Particles.F90',
	'Petsc_Tools.F90', 'Picker_Data_Types.F90', 'Pickers.F90', 'Pickers_Allocates.F90',
	'Pickers_Base.F90', 'Pickers_Deallocates.F90', 'Pickers_Inquire.F90',
	'Polynomials.F90', 'Profiler.cpp', 'Profiler_Fortran.F90',
	'projections.cpp',
        'Pseudo_Consistent_Interpolation.F90', 'python_state.F90',
	'python_statec.c', 'qsortd.F90', 'Quadrature.F90',
	'Read_Exodusii.F90', 'Read_GMSH.F90', 'Read_Triangle.F90',
        'Reference_Counting.F90', 'Rotated_Boundary_Conditions.F90',
	'SampleNetCDF_fortran.F90', 'Shape_Functions.F90',
	'signal_handlers.F90', 'Signal_Vars.F90', 'Signals.F90', 'Solvers.F90',
	'Smoothing_module.F90', 'Sparse_Matrices_Fields.F90',
	'Sparse_Tools.F90', 'Sparse_Tools_Petsc.F90', 'Sparsity_Patterns.F90', 'Sparsity_Patterns_Meshes.F90',
	'State.F90', 'State_Fields.F90', 'Streamfunction.F90',
	'Superconvergence.F90', 'Supermesh.F90', 'Surface_Integrals.F90', 'Surface_Labels.F90',
	'Tensors.F90', 'tet_predicate.cpp', 'Tetrahedron_intersection.F90',
	'tictoc.F90', 'Time_Period.F90', 'Timers.F90', 'Tokenize.cpp',
	'Transform_elements.F90', 'tri_predicate.c', 'Unify_meshes.F90',
	'Unittest_tools.F90', 'Vector_set.F90', 'Vector_Tools.F90',
	'vecset.cpp', 'Vertical_Extrapolation.F90', 'VTK_interfaces.F90',
	'vtk_read_files.cpp',
	'Wandzura_Quadrature.F90', 'Write_GMSH.F90', 'Write_State.F90',
	'Write_Triangle.F90',
	'../assemble/Adapt_Integration.F90',
	'../assemble/Adapt_State.F90', '../assemble/Adapt_State_Prescribed.F90',
	'../assemble/Adaptivity_1D.F90',
	'../assemble/Advection_Diffusion_CG.F90', '../assemble/Advection_Diffusion_DG.F90',
	'../assemble/Advection_Diffusion_FV.F90',
	'../assemble/Assemble_CMC.F90', '../assemble/Biology.F90',
	'../assemble/Compressible_Projection.F90', '../assemble/Coriolis.F90',
	'../assemble/Diagnostic_Children.F90',
	'../assemble/Diagnostic_Fields_Matrices.F90', '../assemble/Diagnostic_fields_wrapper.F90',
	'../assemble/Discrete_Properties.F90',
	'../assemble/Divergence_Matrix_CG.F90', '../assemble/Divergence_Matrix_CV.F90',
	'../assemble/Drag.F90', '../assemble/Field_Equations_CV.F90',
	'../assemble/Foam_Drainage.F90', '../assemble/Foam_Flow.F90',
	'../assemble/Free_Surface.F90', '../assemble/Full_Projection.F90',
	'../assemble/Geostrophic_Pressure.F90',
	'../assemble/Gradient_Matrix_CG.F90', '../assemble/Hydrostatic_Pressure.F90',
	'../assemble/Interpolation_manager.F90',
	'../assemble/LES.F90',
	'../assemble/Mba2d_Integration.F90', '../assemble/Mba3d_Integration.F90',
	'../assemble/MeshMovement.F90',
	'../assemble/Momentum_CG.F90', '../assemble/Momentum_DG.F90',
	'../assemble/Momentum_Diagnostic_Fields.F90',
	'../assemble/Momentum_Equation.F90',
	'../assemble/Multimaterials.F90', '../assemble/Multiphase.F90',
	'../assemble/Node_Locking.F90', '../assemble/OceanSurfaceForcing.F90',
	'../assemble/Particle_Diagnostics.F90',
	'../assemble/Petsc_Solve_State.F90', '../assemble/Pressure_Dirichlet_BCS_CV.F90',
	'../assemble/qmesh.F90', '../assemble/Sam_integration.F90',
	'../assemble/Shallow_Water_Equations.F90',
	'../assemble/Slope_limiters_DG.F90',
	'../assemble/Solenoidal_interpolation.F90',
	'../assemble/State_Matrices.F90',
	'../assemble/Surface_Id_Interleaving.F90',
	'../assemble/Timeloop_utilities.F90',
	'../assemble/Turbine.F90',
	'../assemble/Upwind_Stabilisation.F90',
	'../assemble/Vertical_Balance_Pressure.F90',
	'../assemble/Vorticity_Diagnostics.F90',
	'../assemble/Zoltan_callbacks.F90', '../assemble/Zoltan_detectors.F90',
	'../assemble/Zoltan_global_variables.F90',
	'../assemble/Zoltan_integration.F90',
	'../bathymetry/import_bath_data.cpp',
	'../bathymetry/NetCDF_reader.cpp',
	'../bathymetry/read_netcdf_interface.cpp',
	'../bathymetry/SampleNetCDF2.cpp',
	'../diagnostics/Diagnostic_Fields_Interfaces.F90',
	'../diagnostics/Diagnostic_Source_Fields.F90',
	'../error_measures/Anisotropic_gradation_metric.F90',
	'../error_measures/Anisotropic_ZZ.F90',
	'../error_measures/Aspect_ratios.F90', '../error_measures/Assemble_metric.F90',
	'../error_measures/Boundary_metric.F90',
	'../error_measures/Bounding_box_metric.F90',
	'../error_measures/Conformity_measurement.F90',
	'../error_measures/Edge_lengths.F90',
	'../error_measures/Field_preprocessing.F90',
	'../error_measures/Form_metric.F90',
	'../error_measures/Geometric_constraints_metric.F90',
	'../error_measures/Goal_metric.F90',
	'../error_measures/Goals.F90', '../error_measures/Gradation_metric.F90',
	'../error_measures/Interpolation_metric.F90',
	'../error_measures/Limit_metric.F90', '../error_measures/Mba_adapt.F90',
	'../error_measures/Metric_advection.F90',
	'../error_measures/Project_metric_to_surface.F90',
	'../error_measures/Recovery_estimator.F90',
	'../error_measures/Reference_Meshes.F90',
	'../error_measures/Richardson_metric.F90',
	'../forward_interfaces/Diagnostic_Fields_Wrapper_New.F90',
	'../horizontal_adaptivity/Advancing_front.F90',
	'../horizontal_adaptivity/Extrude.F90', '../horizontal_adaptivity/Combine_Meshes.F90',
	'../horizontal_adaptivity/Metric_based_extrude.F90',
	'../ocean_forcing/bulk_parameterisations.F90',
	'../ocean_forcing/Calendar.cpp',
	'../ocean_forcing/ClimateReader.cpp', '../ocean_forcing/ClimateReader_interface.F90',
	'../ocean_forcing/forcingERA40.cpp', '../ocean_forcing/forcingERA40_fortran.F90',
	'../ocean_forcing/FluxesReader.cpp', '../ocean_forcing/FluxesReader_interface.F90',
	'../ocean_forcing/InitialiseOceanForcing.F90', '../ocean_forcing/load_netcdf.F90',
	'../ocean_forcing/NEMO_load_fields.F90', '../ocean_forcing/NEMO_load_fields_vars.F90',
	'../ocean_forcing/NEMOdataload.cpp', '../ocean_forcing/NEMOdataload_rotation.F90',
	'../ocean_forcing/NEMOReader.cpp',
	'../ocean_forcing/NemoReader_interface.F90',
	'../ocean_forcing/NetCDFReader.cpp', '../ocean_forcing/SampleNetCDF.cpp',
	'../parameterisation/Equation_of_State.F90',
	'../parameterisation/Gls_vertical_turbulence_model.F90',
	'../parameterisation/iceshelf_meltrate_surf_normal.F90',
	'../parameterisation/k_epsilon.F90',
	'../population_balance/DQMOM.F90',
	'../preprocessor/Boundary_Conditions_From_Options.F90',
	'../preprocessor/Field_Priority_Lists.F90',
	'../preprocessor/Initialise_Fields.F90', '../preprocessor/Populate_State.F90',
	'../preprocessor/Physics_From_Options.F90', '../preprocessor/Populate_Sub_State.F90',
	'../preprocessor/Reserve_State.F90',
	'../preprocessor/synthetic_bc.F90',
	'../preprocessor/Tidal_Modelling.F90', '../preprocessor/VTK_Cache.F90',
	'../sediments/Sediment.F90', '../sediments/Sediment_Diagnostics.F90',
    ] + refcounts + h5hut_f90 + diag_fields + check_options + register_diagnostics + diagnostic_files,
    include_directories: [inc, sys_inc, inc_vtkfortran],
    dependencies: [cgal, mpi, netcdf, petsc, python_deps, spud_f90_dep, spatialindex_dep, vtk],
    link_with: [lib_debug, lib_h5hut, lib_mba2d, lib_vtkfortran],
    fortran_args: [
        '-Wno-unused-dummy-argument', '-Wno-conversion', '-Wno-unused-function',
	'-Wno-unused-value', '-Wno-unused-variable', '-Wno-surprising',
	'-fallow-invalid-boz',
    ],
)
